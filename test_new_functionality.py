#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏:
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—é–º–µ
- –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
- –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
"""

import asyncio
import sqlite3
from src.db.database import init_db, save_job, get_job_by_hash, notification_already_sent
from src.bot.notifications import send_job_notification
from src.bot.bot import bot

async def test_new_functionality():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å"""
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    init_db()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –≤–∞–∫–∞–Ω—Å–∏—é
    test_job_text = """
    –ò—â–µ–º Full-Stack —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞–¥ —Å—Ç–∞—Ä—Ç–∞–ø–æ–º!
    
    –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
    - JavaScript/TypeScript
    - React/Vue.js
    - Node.js/Python
    - –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö
    - Git –∏ CI/CD
    
    –£—Å–ª–æ–≤–∏—è:
    - –£–¥–∞–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞
    - –ó–∞—Ä–ø–ª–∞—Ç–∞ –æ—Ç 180,000 —Ä—É–±
    - –î–æ–ª—è –≤ –ø—Ä–æ–µ–∫—Ç–µ
    - –ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫
    
    –ö–æ–Ω—Ç–∞–∫—Ç—ã:
    @startup_hr
    hr@startup.com
    https://t.me/startup_hr
    """
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –≤–∞–∫–∞–Ω—Å–∏—é
    job_hash = save_job(
        text=test_job_text,
        chat_id="test_chat",
        msg_id="test_msg",
        prob=0.88,
        usernames=["startup_hr"],
        emails=["hr@startup.com"],
        links=["https://t.me/startup_hr"]
    )
    
    print(f"‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –≤–∞–∫–∞–Ω—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞ —Å —Ö—ç—à–µ–º: {job_hash}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–∞–∫–∞–Ω—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–∏–ª–∞—Å—å
    job_info = get_job_by_hash(job_hash)
    if job_info:
        print(f"‚úÖ –í–∞–∫–∞–Ω—Å–∏—è –Ω–∞–π–¥–µ–Ω–∞ –≤ –ë–î: {job_info[0][:100]}...")
    else:
        print("‚ùå –í–∞–∫–∞–Ω—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ë–î")
        return
    
    # –¢–µ—Å—Ç 1: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–µ—Ä–≤—ã–π —Ä–∞–∑
    print("\nüß™ –¢–µ—Å—Ç 1: –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...")
    try:
        msg_id = await send_job_notification(bot, job_hash, "iliyasls")
        if msg_id and msg_id != "already_sent":
            print(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ! ID —Å–æ–æ–±—â–µ–Ω–∏—è: {msg_id}")
        elif msg_id == "already_sent":
            print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É–∂–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (–¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–æ)")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")
    
    # –¢–µ—Å—Ç 2: –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ)
    print("\nüß™ –¢–µ—Å—Ç 2: –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏...")
    try:
        msg_id = await send_job_notification(bot, job_hash, "iliyasls")
        if msg_id == "already_sent":
            print("‚úÖ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–æ - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ")
        else:
            print("‚ùå –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    print("\nüß™ –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...")
    is_sent = notification_already_sent(job_hash, "iliyasls")
    if is_sent:
        print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –ë–î")
    else:
        print("‚ùå –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –ë–î")

async def test_stats():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–º–∞–Ω–¥—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    
    with sqlite3.connect("data/db.sqlite3") as conn:
        # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–∫–∞–Ω—Å–∏–π
        total_jobs = conn.execute("SELECT COUNT(*) FROM jobs").fetchone()[0]
        
        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ä–µ–∑—é–º–µ
        total_sent = conn.execute("SELECT COUNT(*) FROM jobs_sent").fetchone()[0]
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        confirmed = conn.execute("SELECT COUNT(*) FROM job_notifications WHERE status = 'confirmed'").fetchone()[0]
        skipped = conn.execute("SELECT COUNT(*) FROM job_notifications WHERE status = 'skipped'").fetchone()[0]
        pending = conn.execute("SELECT COUNT(*) FROM job_notifications WHERE status = 'pending'").fetchone()[0]
    
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   –í—Å–µ–≥–æ –≤–∞–∫–∞–Ω—Å–∏–π: {total_jobs}")
    print(f"   –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ä–µ–∑—é–º–µ: {total_sent}")
    print(f"   –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:")
    print(f"     - –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ: {confirmed}")
    print(f"     - –ü—Ä–æ–ø—É—â–µ–Ω–æ: {skipped}")
    print(f"     - –û–∂–∏–¥–∞–µ—Ç: {pending}")

def print_new_features():
    """–ü–µ—á–∞—Ç–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö"""
    print("\n" + "="*60)
    print("üÜï –ù–û–í–´–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò")
    print("="*60)
    print("‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—é–º–µ –ø—Ä–∏ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–∏ –≤–∞–∫–∞–Ω—Å–∏–∏")
    print("‚úÖ –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
    print("‚úÖ –û–¥–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö")
    print("‚úÖ –£–±—Ä–∞–Ω–æ –≤—Ä–µ–º—è –∏–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
    print("‚úÖ –ù–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É' –∏ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'")
    print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å–ª—É–∂–∞—Ç –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è, –∞ –Ω–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏")
    print("‚úÖ –î–≤–æ–π–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: —Ä–µ–∑—é–º–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å—Ä–∞–∑—É + —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")
    print("="*60)

if __name__ == "__main__":
    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏...")
    
    # –ü–µ—á–∞—Ç–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö
    print_new_features()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    asyncio.run(test_stats())
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
    asyncio.run(test_new_functionality())
    
    print("\n‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
    print("\nüí° –¢–µ–ø–µ—Ä—å –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ–∑—é–º–µ –∏ —É–≤–µ–¥–æ–º–ª—è–µ—Ç –≤–∞—Å –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.")
